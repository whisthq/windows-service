# This workflow installs the .NET framework, builds the Windows Service, installs it and finally starts it
# It tests service installation and starting, which can catch most service errors
name: Build Windows Service

on:
  pull_request:
    branches: [ master, dev ]
    paths-ignore:
    - '**/README.md'

jobs:
  s3-publish:
      name: Build and run Windows Service
      runs-on: windows-latest

      steps:
      - name: Checkout git repository
        uses: actions/checkout@v2
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will fail to push refs to dest repo

      - name: Setup .NET Framework env
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '4.7.x' # SDK Version to use; x will use the latest version of the 4.7 channel

      - name: Install dependencies
        run: dotnet restore

      - name: Restore Nuget Packages
        run: nuget restore FractalService.sln

      - name: Build FractalService Solution
        run: msbuild FractalService.sln -p:Configuration=Release

      - name: Install & Start Windows Service
        run: | 
          cmd.exe /c 'sc.exe Create "Fractal" binPath="D:\a\windows-service\windows-service\FractalService\bin\Release\FractalService.exe" start="auto"' && 
          cmd.exe /c 'sc.exe description "Fractal" "Fractal Service"' &&
          sc.exe Start 'Fractal'
           
