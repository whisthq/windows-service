# workflows/push-sentry-release.yml
#
# Push Sentry Release
# Automatically push a new sentry release for each of the fractal/fractal projects.

name: "Push Sentry Release"

on:
    push:
        branches:
            - master
        paths-ignore:
            - "README.md"
            - "**/README.md"
            - ".github/workflows/README.md"
    workflow_dispatch:

jobs:
    push-sentry-release-main:
        name: Create and Upload Windows-Service Sentry Release
        runs-on: ubuntu-20.04

        env:
            SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
            SENTRY_ORG: tryfractal
            SENTRY_PROJECT: windows-service

        steps:
            - name: Checkout Git Repository
              uses: actions/checkout@v2

            - name: Set Git repository URL to enable sentry-cli automatic commit tagging
              run: |
                  git remote set-url origin https://github.com/fractal/windows-service

            - name: Set SENTRY_DEPLOY_ENVIRONMENT based on Git branch
              shell: bash
              run: |
                  if [ "${GITHUB_REF##*/}" == "master" ]; then
                      echo "SENTRY_DEPLOY_ENVIRONMENT=production" >> $GITHUB_ENV
                  elif [ "${GITHUB_REF##*/}" == "staging" ]; then
                      echo "SENTRY_DEPLOY_ENVIRONMENT=staging" >> $GITHUB_ENV
                  else
                      echo "SENTRY_DEPLOY_ENVIRONMENT=dev" >> $GITHUB_ENV
                  fi

            - name: Create new Sentry release
              run: |
                  # Install Sentry CLI
                  curl -sL https://sentry.io/get-cli/ | bash

                  # Create new Sentry release
                  export SENTRY_RELEASE=$(sentry-cli releases propose-version)
                  sentry-cli releases new -p $SENTRY_PROJECT $SENTRY_RELEASE
                  sentry-cli releases set-commits --auto $SENTRY_RELEASE --log-level=debug
                  sentry-cli releases finalize $SENTRY_RELEASE

                  # Create new deploy for this Sentry release
                  sentry-cli releases deploys $SENTRY_RELEASE new -e $SENTRY_DEPLOY_ENVIRONMENT

    notify-slack:
        name: Notify Slack
        needs: [push-sentry-release-main]
        if: success()
        runs-on: ubuntu-20.04

        steps:
            - name: Notify Slack
              run: |
                  if [ "${GITHUB_REF##*/}" == "master" ]; then
                    curl -X POST \
                    --data-urlencode "payload={\"channel\": \"#alerts\", \"username\": \"Sentry\", \"text\": \"Windows-Service Sentry Releases Pushed to Production with Environment `production`.\", \"icon_emoji\": \":sentry:\"}" \
                    ${{ secrets.SLACK_HOOKS_ENDPOINT }}
                  elif [ "${GITHUB_REF##*/}" == "staging" ]; then
                    curl -X POST \
                    --data-urlencode "payload={\"channel\": \"#alerts\", \"username\": \"Sentry\", \"text\": \"Windows-Service Sentry Releases Pushed to Staging with Environment `staging`.\", \"icon_emoji\": \":sentry:\"}" \
                    ${{ secrets.SLACK_HOOKS_ENDPOINT }}
                  else
                    curl -X POST \
                    --data-urlencode "payload={\"channel\": \"#alerts\", \"username\": \"Sentry\", \"text\": \"Windows-Service Sentry Releases Pushed to Development with Environment `dev`.\", \"icon_emoji\": \":sentry:\"}" \
                    ${{ secrets.SLACK_HOOKS_ENDPOINT }}
                  fi
